#!/bin/bash

# Cryptcontainer is a little tool to use encrypted container easily.

# Copyright (C) 2014  LÃ©o 'cryptobioz' Depriester <leo.depriester@exadot.fr>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Function to check errors while commands are running
function test {
    "$@"
    local status=$?
    if [ $status -ne 0 ]; then
        echo "[-] An error occurred, please try again."
        exit 0
    fi
    return $status
}

# Function to display help menu
function help_menu {
    echo "Usage : cryptcontainer [OPTION] ARGUMENT"
    echo "Options :"
    echo "      -c MyFile 1000 => Create new container of 1000Mo (1Go) into MyFile file."
    echo "      -o MyFile      => Mount the container MyFile."
    echo "      -d dKte5gsCaN  => Unmount the container with the ID dKte5gsCaN."
    echo "      -l             => List mounted container with their IDs."
}

# Function to create a container
function create_container {
    map=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1`
    echo -e "\n[1/4] Creating container ...\n"
    test dd if=/dev/urandom of=$1 bs=1M count=$2
    echo -e "\n[2/4] Encrypting container ..."
    test cryptsetup luksFormat -c aes-xts-plain64 -s 512 -h sha512 $1
    echo -e "\n[3/4] Formatting container ...\n"
    test cryptsetup luksOpen $1 enc$map
    test mkfs.ext4 -j /dev/mapper/enc$map
    test e2fsck -f /dev/mapper/enc$map
    echo -e "\n[4/4] Clearing ...\n"
    test cryptsetup luksClose /dev/mapper/enc$map
    echo "Container successfully created."
}

# Function to open a container
function open_container {
    map=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1`
    echo "Opening container ..."
    test cryptsetup luksOpen $1 enc$map
    test mkdir /media/enc$map
    test mount /dev/mapper/enc$map /media/enc$map
    echo "Container mounted on /media/enc$map."
}

# Function to destroy a container
function destroy_container {
    echo "Close container ..."
    test umount /media/enc$1
    test cryptsetup luksClose enc$1
    test rm -r /media/enc$1
    echo "Container dismounted."
}

# Function to list opened containers
function list_opened_containers {
    echo "ID"
    echo `ls /media/ | grep -oP "^enc\K([A-Za-z0-9]+)"`
}


# Check if root
if [[ $EUID -ne 0 ]]; then
    echo "You must run cryptcontainer as root"
    exit 1
fi



while getopts "hlc:d:o:" option
do
    case $option in
        h)
            help_menu
            exit 0
            ;;
        c)
            create_container $2 $3
            exit 0
            ;;
        d)
            destroy_container $OPTARG
            exit 0
            ;;
        o)
            open_container $OPTARG
            exit 0
            ;;
        l)
            list_opened_containers
            exit 0
            ;;
    esac
done
