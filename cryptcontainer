#!/bin/bash

# Cryptcontainer is a little tool to use encrypted container easily.

# Copyright (C) 2014  LÃ©o 'cryptobioz' Depriester <leo.depriester@exadot.fr>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Function to check errors while commands are running
function test {
    "$@"
    local status=$?
    if [ $status -ne 0 ]; then
        echo "[-] An error occurred, please try again."
        exit 0
    fi
    return $status
}


# Check if root
if [[ $EUID -ne 0 ]]; then
    echo "You must run cryptcontainer as root"
    exit 1
fi



if [ $# -eq 3 ]
then
    if [ $1 = "-c" ]
    then
        map=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1`
        echo -e "\n[1/4] Creating container ...\n"
        test dd if=/dev/urandom of=$2 bs=1M count=$3
        echo -e "\n[2/4] Encrypting container ..."
        test cryptsetup luksFormat -c aes-xts-plain64 -s 512 -h sha512 $2
        echo -e "\n[3/4] Formatting container ...\n"
        test cryptsetup luksOpen $2 enc$map
        test mkfs.ext4 -j /dev/mapper/enc$map
        test e2fsck -f /dev/mapper/enc$map
        echo -e "\n[4/4] Clearing ...\n"
        test cryptsetup luksClose /dev/mapper/enc$map
        echo "Container successfully created."
    fi
elif [ $# -eq 2 ]
then
    if [ $1 = "-o" ]
    then
        map=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1`
        echo "Opening container ..."
        test cryptsetup luksOpen $2 enc$map
        test mkdir /media/enc$map
        test mount /dev/mapper/enc$map /media/enc$map
        echo "Container mounted on /media/enc$map."
    elif [ $1 = "-d" ]
    then
        echo "Close container ..."
        test umount /media/enc$2
        test cryptsetup luksClose enc$2
        test rm -r /media/enc$2
        echo "Container dismounted."
    fi
elif [ $# -eq 1 ]
then
    if [ $1 = "-l" ]
    then
        echo "ID"
        echo `ls /media/ | grep -oP "^enc\K([A-Za-z0-9]+)"`
    elif [ $1 = "-h" ]
    then
        echo "Usage : cryptcontainer [OPTION] ARGUMENT"
        echo "Options :"
        echo "      -c MyFile 1000 => Create new container of 1000Mo (1Go) into MyFile file."
        echo "      -o MyFile      => Mount the container MyFile."
        echo "      -d MyFile      => Unmount the container MyFile."
        echo "      -l             => List mounted container."
    fi
else
    echo "Error"
fi
